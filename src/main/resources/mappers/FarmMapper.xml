<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.solvd.laba.jdbc.dao.FarmDAO">

    <resultMap id="farmResultMap" type="com.solvd.laba.jdbc.model.Farm">
        <id property="id" column="farm_id"/>
        <result property="name" column="farm_name"/>
        <result property="location" column="farm_location"/>

        <association property="owner" javaType="com.solvd.laba.jdbc.model.Owner">
            <id property="id" column="owner_id"/>
            <result property="firstName" column="owner_first_name"/>
            <result property="secondName" column="owner_second_name"/>
        </association>

        <collection property="fields" ofType="com.solvd.laba.jdbc.model.Field">
            <id property="id" column="field_id"/>
            <result property="areaInAcres" column="field_area_in_acres"/>
            <result property="coordinates" column="field_coordinates"/>

            <association property="crop" javaType="com.solvd.laba.jdbc.model.Crop">
                <id property="id" column="crop_id"/>
                <result property="name" column="crop_name"/>
                <result property="dateToSeed" column="crop_seeding_date"/>
                <result property="dateToHarvest" column="crop_harvesting_date"/>
            </association>
        </collection>

        <collection property="workers" ofType="com.solvd.laba.jdbc.model.Worker">
            <id property="id" column="worker_id"/>
            <result property="firstName" column="worker_first_name"/>
            <result property="secondName" column="worker_second_name"/>

            <collection property="responsibilities" ofType="com.solvd.laba.jdbc.model.Responsibility">
                <id property="id" column="responsibility_id"/>
                <result property="task" column="responsibility_task"/>
                <result property="description" column="responsibility_description"/>

                <association property="role" javaType="com.solvd.laba.jdbc.model.Role">
                    <id property="id" column="role_id"/>
                    <result property="profession" column="role_profession"/>
                </association>
            </collection>
        </collection>
    </resultMap>

    <select id="getById" resultMap="farmResultMap">
        SELECT
            f.id AS farm_id,
            f.name AS farm_name,
            f.location AS farm_location,
            f.owner_id AS owner_id,
            o.first_name AS owner_first_name,
            o.second_name AS owner_second_name,
            fi.id AS field_id,
            fi.area_in_acres AS field_area_in_acres,
            fi.coordinates AS field_coordinates,
            fi.crop_id AS crop_id,
            c.name AS crop_name,
            c.date_to_seed AS crop_seeding_date,
            c.date_to_harvest AS crop_harvesting_date,
            w.id AS worker_id,
            w.first_name AS worker_first_name,
            w.second_name AS worker_second_name,
            wr.responsibility_id AS responsibility_id,
            re.task AS responsibility_task,
            re.description AS responsibility_description,
            re.role_id AS role_id,
            r.profession AS role_profession
        FROM farms AS f
            LEFT JOIN owners AS o on f.owner_id = o.id
            LEFT JOIN fields AS fi on f.id = fi.farm_id
            LEFT JOIN crops AS c ON fi.crop_id = c.id
            LEFT JOIN workers AS w ON f.id = w.farm_id
            LEFT JOIN worker_responsibilities AS wr ON w.id = wr.worker_id
            LEFT JOIN responsibilities AS re ON wr.responsibility_id = re.id
            LEFT JOIN roles AS r ON re.role_id = r.id
        WHERE f.id = #{id}
    </select>

    <select id="getAll" resultMap="farmResultMap">
        SELECT
            f.id AS farm_id,
            f.name AS farm_name,
            f.location AS farm_location,
            f.owner_id AS owner_id,
            o.first_name AS owner_first_name,
            o.second_name AS owner_second_name,
            fi.id AS field_id,
            fi.area_in_acres AS field_area_in_acres,
            fi.coordinates AS field_coordinates,
            fi.crop_id AS crop_id,
            c.name AS crop_name,
            c.date_to_seed AS crop_seeding_date,
            c.date_to_harvest AS crop_harvesting_date,
            w.id AS worker_id,
            w.first_name AS worker_first_name,
            w.second_name AS worker_second_name,
            wr.responsibility_id AS responsibility_id,
            re.task AS responsibility_task,
            re.description AS responsibility_description,
            re.role_id AS role_id,
            r.profession AS role_profession
        FROM farms AS f
            LEFT JOIN owners AS o on f.owner_id = o.id
            LEFT JOIN fields AS fi on f.id = fi.farm_id
            LEFT JOIN crops AS c ON fi.crop_id = c.id
            LEFT JOIN workers AS w ON f.id = w.farm_id
            LEFT JOIN worker_responsibilities AS wr ON w.id = wr.worker_id
            LEFT JOIN responsibilities AS re ON wr.responsibility_id = re.id
            LEFT JOIN roles AS r ON re.role_id = r.id
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO farms (name, location, owner_id)
        VALUES (#{name}, #{location}, #{owner.id})
        ON DUPLICATE KEY UPDATE id = LAST_INSERT_ID(id), owner_id = VALUES(owner_id)
    </insert>

<!--    <insert id="insertDataToWorkerResponsibilities" parameterType="com.solvd.laba.jdbc.model.Worker">-->
<!--        INSERT IGNORE INTO worker_responsibilities (worker_id, responsibility_id)-->
<!--        VALUES-->
<!--        <foreach collection="responsibilities" item="responsibility" separator=",">-->
<!--            (#{id}, #{responsibility.id})-->
<!--        </foreach>-->
<!--    </insert>-->

<!--    <delete id="deleteDataFromWorkerResponsibilities" parameterType="com.solvd.laba.jdbc.model.Worker">-->
<!--        DELETE FROM worker_responsibilities-->
<!--        WHERE worker_id = #{id}-->
<!--        AND responsibility_id NOT IN-->
<!--        <foreach collection="responsibilities" item="responsibility" open="(" separator="," close=")">-->
<!--            #{responsibility.id}-->
<!--        </foreach>-->
<!--    </delete>-->

    <update id="update">
        UPDATE farms SET
            name = #{name}, location = #{location}, owner_id = #{owner.id}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM farms
        WHERE id = #{id}
    </delete>

</mapper>
